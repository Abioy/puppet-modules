Puppet module: squid

# Written by Lab42 #
# http://www.Example42.com

Licence: GPLv3

DESCRIPTION:
This module installs and manages squid.
Standard and extended classes are available.
Decide and customize how you want to define configuration files: static files, templates, infile modifications...


USER VARIABLES:
In order to customize the behaviour of the module you can set the following variables:


USAGE:
# Standard Classes 
include squid              # Install and run squid 

include squid::disable     # Disable squid service.
include squid::disableboot # Disable squid service at boot time, but don't stop if it's running.
include squid::absent      # Remove squid package.

# Extended Classes (generally require storeconfigs)
include squid::monitor     # Monitor squid - Automatically included if $monitor=yes - Requires Example42's monitor module
include squid::backup      # Backup squid data - Automatically included if $backup=yes - Requires Example42's backup module
include squid::firewall    # Manages firewall rule for squid service - Automatically included if $firewall=yes - Requires Example42's firewall module

# Generic define to set parameters in the main configuration file. EXPERIMENTAL.
squid::conf { "ParameterName": value="YourValue"} # Generic 

# Module specific classes

# Module specific defines


GENERAL VARIABLES:
Example42 modules collection uses some general variables that can influence the behaviour of this module.
You can happily live without considering or setting them, but they can be useful to manage different projects maintanining the module's resuability. 
$my_project - If set, permits you to alter and customize the module behaviour in custom project classes
$my_project_onmodule - If set to yes your project classes are looked in a dedicated project module:
  - $my_project_onmodule not set -> Module autoloads squid::$my_module (MODULEPATH/squid/manifests/$my_project.pp)
  - $my_project_onmodule == yes -> Module autoloads $my_module::squid (MODULEPATH/$my_project/manifests/squid.pp)
$base_source - Let you define an alternative source for static files:
  - $base_source not set -> Files are looked in puppet://$servername/ (the PuppetMaster)
  - $base_source set -> Files are looked in $base_source ( could be puppet://$servername/$my_module ) 
  Note that the module automatically manages the different paths for Puppet pre 0.25
  

DEPENDENCIES:
Standard classes generally don't need external modules.
Extended classes need the relevant external modules (import monitor ; import backup ... ) and the "common" module (import common)
squid::conf generic infile configuration define needs the "common" module
Check on individual module specific classes and defines if there are specific requirements.
